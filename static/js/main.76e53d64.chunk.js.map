{"version":3,"sources":["components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/Footer/Footer.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/objject-helpers.js","Redux/users-reduser.js","components/common/Paginator/Paginator.jsx","asets/images/user1.png","components/Users/User.jsx","components/Users/Users.jsx","Redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","Redux/app-reduser.js","Redux/sidebar-reduser.js","Redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","asets/images/preloader.svg","components/common/Preloader/Preloader.js","Redux/auth-reduser.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","Redux/profile-reduser.js","Redux/dialogs-reduser.js","components/Footer/Footer.module.css","components/Users/users.module.css","api/api.js"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","Footer","footer","News","props","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","fake","followSuccess","userId","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","state","action","followed","count","filter","id","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","ollPages","onClick","p","cn","selectedPage","pageNumber","event","User","user","unfollow","follow","src","photos","small","userPhoto","disabled","some","name","status","Users","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","usersAPI","bind","page","totalCount","Header","header","loginBlock","isAuth","login","logout","HeaderContainer","auth","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","LoginPage","App","initializeApp","path","render","AppContainer","withRouter","promise","getAuthUserData","Promise","all","then","SamuraiJSApp","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","style","backgroundColor","preloader","SET_USER_DATA","email","setAuthUserData","payload","authAPI","me","response","password","rememberMe","messages","length","stopSubmit","_error","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","like","company","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","getProfile","getStatus","profileAPI","updateStatus","newPost","postId","SEND_MESSAGE","dialogs","sendMessageCreator","newMessageBody","body","instance","axios","withCredentials","baseURL","headers","get","post","delete","warn","put"],"mappings":"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","file":"static/js/main.76e53d64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__zCOCn\",\"item\":\"Navbar_item__35cGe\",\"activeLink\":\"Navbar_activeLink__aeQsH\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Profile is cached for offline use.\" message.\n              console.log('Profile is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n\r\n\r\n            <div className={s.item} >\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}><strong>USERS</strong></NavLink>\r\n            </div>\r\n\r\n\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}><strong>Profile</strong></NavLink>\r\n            </div>\r\n            <div className={s.item} >\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}><strong>Messages</strong></NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}><strong>News</strong></NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}><strong>Music</strong></NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}><strong>Settings</strong></NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={s.footer}>\r\n            <center><h3> It-camasutra 2020 </h3></center>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport s from \"./News.module.css\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport s from \"./Music.module.css\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport s from \"./Settings.module.css\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings GO\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","\r\n\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return  items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objject-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n};\r\n\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.ollPages}>\r\n        <center>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}> BACK </button>}\r\n\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={cn({[styles.selectedPage]: currentPage === p}, styles.pageNumber)}\r\n                                 key={p}\r\n                                 onClick={(event) => {\r\n                                     onPageChanged(p);\r\n                                 }}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={ () => { setPortionNumber(portionNumber + 1) }}> NEXT </button>}\r\n        </center>\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user1.3759889a.png\";","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from '../../asets/images/user1.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                                 className={styles.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed ? <button disabled={followingInProgress\r\n                                    .some(id => id === user.id)}\r\n                                                  onClick={() => {\r\n                                                      unfollow(user.id)\r\n                                                  }}>\r\n                                    Unfollow</button>\r\n                                : <button disabled={followingInProgress.some(id => id === user.id)}\r\n\r\n                                          onClick={() => {\r\n                                              follow(user.id)\r\n                                          }}>\r\n                                    Follow</button>}\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"user.location.country\"}</div>\r\n                            <div>{\"user.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n        </div>)\r\n}\r\n\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                />)\r\n            }\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\n/*export const getTempSavedUsers = (state) => {\r\n    return state.usersPage.users.filter(u => true //that are in tempsavedArray);\r\n}*/\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger;\r\n    //for... match... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from \"../../Redux/users-reduser\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"./../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../Redux/users-selectors\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n\r\n            {this.props.isFetching ? <Preloader/>: null}\r\n\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                         pageSize={this.props.pageSize}\r\n                         currentPage={this.props.currentPage}\r\n                         onPageChanged={this.onPageChanged}\r\n                         users={this.props.users}\r\n                         follow={this.props.follow}\r\n                         unfollow={this.props.unfollow}\r\n                         followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}*/\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber));\r\n        },\r\n\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount));\r\n        },\r\n\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching));\r\n        };\r\n\r\n\r\n    }\r\n}*/\r\n\r\n\r\nexport default compose(\r\n   // withAuthRedirect,    - zahust users page\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n) (UsersContainer);","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <center><img\r\n                src='https://safrc.org/uploads/monthly_2020_03/safrc.png.fa36d42bd2cac7c836a856e7f874f10a.png'/>\r\n            </center>\r\n            <div>\r\n                <center><strong>Save the WORLD !!!</strong></center>\r\n            </div>\r\n\r\n            <div className={s.loginBlock}>\r\n\r\n                {props.isAuth\r\n                    ? <div> {props.login} - <button onClick={props.logout}>Logout</button> </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/auth-reduser\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header { ...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);","\r\nimport {getAuthUserData} from \"./auth-reduser\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    //dispatch(somethingelse());\r\n    //dispatch(somethingelse());\r\n\r\n    Promise.all ([promise])\r\n        .then( () => {\r\n        dispatch(initializedSuccess());\r\n    } );\r\n\r\n\r\n};\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state;\r\n\r\n\r\n}\r\n\r\n export default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reduser\";\r\nimport dialogsReducer from \"./dialogs-reduser\";\r\nimport sidebarReducer from \"./sidebar-reduser\";\r\nimport usersReducer from \"./users-reduser\";\r\nimport authReducer from \"./auth-reduser\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reduser\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n       return <Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n       </Suspense>\r\n    };\r\n}","import React, {Component, Suspense} from 'react';\nimport './App.css';\n/*import Header from \"./components/Header/Header\";*/\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reduser\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./Redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n//import ProfileContainer from \"./components/Navbar/Profile/ProfileContainer\";\n//import LoginPage from \"./components/Login/Login\";\n\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Navbar/Profile/ProfileContainer'))\nconst LoginPage = React.lazy(() => import('./components/Login/Login'))\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n\n        return (\n            <div className='app-wraper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wraper-content'>\n\n                    <Route path='/profile/:userId?'\n                           render={withSuspense(ProfileContainer)}/>\n\n                    <Route path='/dialogs'\n                           render={withSuspense(DialogsContainer)}/>\n\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n\n\n                    <Route path='/login' render={() => {                 //vgori zrobleno cherez hoc\n                        return <Suspense fallback={<Preloader/>}>\n                            <LoginPage/>\n                        </Suspense>\n                    }}/>\n\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\n\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <React.StrictMode>\n                <AppContainer/>\n            </React.StrictMode>\n        </Provider>\n    </BrowserRouter>\n\n}\n\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n/*import App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./Redux/redux-store\";\r\nimport {BrowserRouter} from \"react-router-dom\";*/\r\n\r\n\r\n/*setInterval( () => {\r\n    store.dispatch({type: \"FAKE\"})\r\n}, 1000);*/\r\n\r\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nserviceWorker.unregister();\r\n","export default __webpack_public_path__ + \"static/media/preloader.2f012566.svg\";","import React from \"react\";\r\nimport preloader from \"./../../../asets/images/preloader.svg\";\r\n\r\nlet Preloader = () => {\r\n    return <div style={ {backgroundColor: 'white'} }>\r\n            <img src={preloader}/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Preloader;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data;\r\n            dispatch(setAuthUserData (id, email, login, true));\r\n        }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData ());\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages [0] : \"Some error\";\r\n                dispatch(stopSubmit('login', {_error: message }));\r\n            }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData (null, null, null, false));\r\n            }\r\n};\r\n\r\n\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2fGI_\",\"ollPages\":\"Paginator_ollPages__36FSQ\",\"paginator\":\"Paginator_paginator__mmmS-\",\"pageNumber\":\"Paginator_pageNumber__WcuTz\",\"cn\":\"Paginator_cn__6UmBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__zYO2f\",\"img\":\"Header_img__3p5Uz\",\"loginBlock\":\"Header_loginBlock__30JXt\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', like: 445458, location: 'Lviv', company: 'Wokreyn'},\r\n        {id: 2, message: 'It\\'s my first post', like: 5678944467, location: 'Kyiv', company: 'Start Up Forum'},\r\n        {\r\n            id: 3,\r\n            message: 'It\\'s very nice funktion props',\r\n            like: 567,\r\n            location: 'Uzgorod',\r\n            company: 'Mariana company'\r\n        },\r\n        {id: 4, message: 'By in Fokstrot', like: 431, location: 'Rivne', company: 'Appler'},\r\n        {id: 5, message: 'We ned JSX Developer', like: 1141, location: 'Spas', company: 'Kuzdei Inc'},\r\n        {\r\n            id: 6,\r\n            message: 'We ned JSX Developer Lorem23. BJSKere movi2 / Hellow Hany moon. Nice mood/ Whats wrong with you to day?Heeey ..We ned JSX Developer Lorem23. BJSKere movi2 / Hellow Hany moon. Nice mood We ned JSX Developer Lorem23. BJSKere movi2 / Hellow Hany moon. Nice mood',\r\n            like: 81,\r\n            location: 'Lviv',\r\n            company: 'Wokreyn'\r\n        },\r\n        {\r\n            id: 7,\r\n            message: 'We ned JSX Developer Lorem23. BJSKere movi2 / Hellow Hany moon. Nice mood/ Whats wrong with you to day?Heeey ..We ned JSX Developer Lorem23. BJSKere movi2 / Hellow Hany moon. Nice mood We ned JSX Developer Lorem23. BJSKere movi2 / Hellow Hany moon. Nice mood',\r\n            like: 901,\r\n            location: 'Hrabiv',\r\n            company: 'VOVA BABIN Inc'\r\n        },\r\n        {id: 8, message: 'It\\'s done', like: 401, location: 'Roznativ', company: 'Spaser Z LLC'},\r\n\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 9,\r\n                message: action.newPostText,\r\n                like: 0,\r\n                location: '',\r\n                company: ''\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)};\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: 1, name: 'Dmytro'},\r\n        {id: 2, name: 'Irinka'},\r\n        {id: 3, name: 'Snizanna'},\r\n        {id: 4, name: 'Kata'},\r\n        {id: 5, name: 'Alina'},\r\n        {id: 6, name: 'Valera'},\r\n        {id: 7, name: 'Ivanka'},\r\n        {id: 8, name: 'Taras'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'How are your'},\r\n        {id: 3, message: 'Very Nice'},\r\n        {id: 4, message: 'Nice Job'},\r\n        {id: 5, message: 'Very Grete'},\r\n        {id: 6, message: 'I like BigBurger'},\r\n        {id: 7, message: 'Nice to met you'},\r\n        {id: 8, message: 'I\\'m done'},\r\n    ]\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                messages: [ ...state.messages, {id: 9, message: body}]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3jzUY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2woq4\",\"selectedPage\":\"users_selectedPage__19qaN\",\"ollPages\":\"users_ollPages__1SZTC\"};","import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\" : \"2a0c251e-38ef-4a16-a793-cd0fc288b8ef\"\r\n    }\r\n\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}` )\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n\r\n    getProfile (userId) {\r\n        console.warn('Obsolete method. Please use profileAPI objekt.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile (userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n\r\n    getStatus (userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n\r\n    updateStatus (status) {\r\n        return instance.put(`profile/status/`, {status: status } )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return instance.get(`auth/me`);\r\n    },\r\n\r\n    login (email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe} );\r\n    },\r\n\r\n    logout () {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}